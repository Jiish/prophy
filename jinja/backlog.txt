
To do:
- Unions
- Dimension cases
- Test of verification of structures dependencies


-need a implematation of r32 and r64 in protophy
-problem with composite u32 tylko ( i32)
-hardcoded in parser.py :  if "bitMaskOr" in value:
                        		value = 2
                    	   elif "EAaMemPoolCid_ApplicationCidStart" in value:
                        		value = value.replace("EAaMemPoolCid_ApplicationCidStart",'2')
- there is a problem with typedef = struct


======================== Protophy ==============================
zrobione:
    usuniÄ™ty warunek czy bound jest unsigned
do zrobienia:


mac = MAC_AddressConfigReq()
mac.transactionId = 10
print mac

poolInfo = SL2PoolInfo()

depl = SL2DeploymentInfo()
depl.l2NodeType = 10
poolInfo.deploymentInfo.extend([depl])


print poolInfo
print depl

resp.dynamicData.extend([info])


from MAC import *
from DCM_MAC_PS import *

# mac = MAC_AddressConfigReq()
# mac.transactionId = 10
# poolInfo = SL2PoolInfo()
# depl = SL2DeploymentInfo()
# poolInfo.deploymentInfo.extend([depl])
# mac.poolInfo.extend([poolInfo])
# print mac
# s= repr(mac.encode(">"))

# s=s.replace("\\","")
# s=s.replace("x","")
# s=s.replace("n","")





mac2 = MAC_CaCellConfigResp()
print mac2
messageResult = SMessageResult()
print messageResult
z = repr(messageResult.encode(">"))
mac2.lnCelId=10
print len(mac2.encode("<"))
print mac2

print repr(mac2.encode(">"))